{"mappings":"YAKA,IAAMA,EAAOC,SAASC,cAAc,SAC9BC,EAAWF,SAASC,cAAc,iBAExCF,EAAKI,iBAAiB,UAetB,SAAkBC,GAGhB,IAFAA,EAAIC,iBACJN,EAAKO,UAAW,EACXC,EAAI,EAAGA,GAAKL,EAAUK,IAAK,CAC9B,IAAMC,EAAQC,MAAMD,MAAME,MAAQD,MAAME,KAAKD,MAAQH,EACrDK,QAAQC,IAAIL,E,KAIhBM,QACGC,MAAK,SAAAC,G,IAAGC,EAAQD,EAARE,SAAUV,EAAKQ,EAALR,MACjBW,OAAOC,QAAQ,qBAAoCC,OAAfJ,EAAS,QAAYI,OAANb,EAAM,O,IAE1Dc,OAAM,SAAAN,G,IAAGO,EAAQP,EAARE,SAAUV,EAAKQ,EAALR,MAClBW,OAAOK,QAAQ,oBAAmCH,OAAfE,EAAS,QAAYF,OAANb,EAAM,O","sources":["src/js/03-promises.js"],"sourcesContent":["// const inputDelay = document.querySelector('input[delay]');\n// const inputStep = document.querySelector('input[step]');\n// const inputAmount = document.querySelector('input[amount]');\n// const submitBtn = document.querySelector('button');\n\nconst form = document.querySelector('.form');\nconst position = document.querySelector('input[amount]');\n\nform.addEventListener('submit', onSubmit);\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n}\n\nfunction onSubmit(evt) {\n  evt.preventDefault();\n  form.disabled = true;\n  for (i = 1; i <= position; i++) {\n    const delay = input.delay.value + input.step.value * i;\n    console.log(delay);\n  }\n}\n\npromise\n  .then(({ position, delay }) => {\n    Notify.success(`Fulfilled promise ${position} in ${delay} ms`);\n  })\n  .catch(({ position, delay }) => {\n    Notify.failure(`Rejected promise ${position} in ${delay} ms`);\n  });\n\n// const createPromise = (position, delay) => {\n//   const promise = new Promise((resolve, reject) => {\n//     const amount = 0;\n//     const shouldResolve = Math.random() > 0.3;\n//     for (i = 0; i <= amount; i++) {\n//       amount++;\n//       setInterval(() => {\n//         if (shouldResolve) {\n//           // Fulfill\n//           resolve(`✅ Fulfilled promise ${position} in ${delay}ms`);\n//         } else {\n//           // Reject\n//           reject(`❌ Rejected promise ${position} in ${delay}ms`);\n//         }\n//         console.log(promise);\n//       }, 1000);\n//     }\n//   });\n// };\n\n// createPromise\n//   .then((position, delay) => {\n//     console.log(value);\n//   })\n//   .catch(error => {\n//     console.log(error);\n//   });\n"],"names":["$ce04d3a99e08e73b$var$form","document","querySelector","$ce04d3a99e08e73b$var$position","addEventListener","evt","preventDefault","disabled","i","delay","input","value","step","console","log","promise","then","param","position2","position","Notify","success","concat","catch","position3","failure"],"version":3,"file":"03-promises.1e5eabed.js.map"}