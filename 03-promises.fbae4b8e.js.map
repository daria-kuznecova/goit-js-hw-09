{"mappings":"AAKA,MAEMA,EAAgB,CAACC,EAAUC,KAC/B,MAAMC,EAAU,IAAIC,SAAQ,CAACC,EAASC,KACpC,MAAMC,EAAS,EACTC,EAAgBC,KAAKC,SAAW,GACtC,IAAKC,EAAI,EAAGA,GAAKJ,EAAQI,IACvBJ,IACAK,aAAY,KACNJ,EAEFH,EAAQ,uBAAqBJ,QAAiBC,OAG9CI,EAAO,sBAAoBL,QAAeC,OAE5CW,QAAQC,IAAIX,EAAQ,GACnB,I,GAEL,EAnBSY,SAASC,cAAc,SAqB/BC,iBAAiB,SAAUjB,EAAcC,SAAUC,QAExDF,EACGkB,MAAK,CAACjB,EAAUC,KACfW,QAAQC,IAAIK,MAAM,IAEnBC,OAAMC,IACLR,QAAQC,IAAIO,EAAM","sources":["src/js/03-promises.js"],"sourcesContent":["// const inputDelay = document.querySelector('input[delay]');\n// const inputStep = document.querySelector('input[step]');\n// const inputAmount = document.querySelector('input[amount]');\n// const submitBtn = document.querySelector('button');\n\nconst form = document.querySelector('.form');\n\nconst createPromise = (position, delay) => {\n  const promise = new Promise((resolve, reject) => {\n    const amount = 0;\n    const shouldResolve = Math.random() > 0.3;\n    for (i = 0; i <= amount; i++) {\n      amount++;\n      setInterval(() => {\n        if (shouldResolve) {\n          // Fulfill\n          resolve(`✅ Fulfilled promise ${position} in ${delay}ms`);\n        } else {\n          // Reject\n          reject(`❌ Rejected promise ${position} in ${delay}ms`);\n        }\n        console.log(promise);\n      }, 1000);\n    }\n  });\n};\nform.addEventListener('submit', createPromise(position, delay));\n\ncreatePromise\n  .then((position, delay) => {\n    console.log(value);\n  })\n  .catch(error => {\n    console.log(error);\n  });\n"],"names":["$47d4ff9957288465$var$createPromise","position","delay","promise","Promise","resolve","reject","amount","shouldResolve","Math","random","i","setInterval","console","log","document","querySelector","addEventListener","then","value","catch","error"],"version":3,"file":"03-promises.fbae4b8e.js.map"}